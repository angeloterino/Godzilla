@{ string _month = new DateTime(StrawmanApp.Helpers.PeriodUtil.Year, StrawmanApp.Helpers.PeriodUtil.Month, 1).ToString("MMMM", System.Globalization.CultureInfo.InvariantCulture);}
<div style="display:table-row">
<div class="chart_wrapper" style="width:1380px; border:2px solid rgb(255,0,0);">
<div class="chart_title" style="margin: 20px; height:35px; font-family:Arial; font-size:21px; font-weight:bold; background-color:rgb(255,0,0); color:rgb(255,255,255);position:relative;padding-left:20px;">
@ViewBag.ChartTitle<div style="float:right; margin-right:20px;">Data up to @_month @StrawmanApp.Helpers.PeriodUtil.Year.ToString()</div>
</div>
<table style="font-size:1.6em; margin:0 auto;" class="chart">
<thead>
<tr>
<th colspan="3" style="width:24%;">@StrawmanApp.Helpers.PeriodUtil.Year.ToString() MAT Market Size<br />($ MM)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() MAT Market <br />Share (%)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() YTD Market <br />Share (%)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() LM Market <br />Share (%)</th>
<th style="width:5%"></th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() MAT <br />Growth (%)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() YTD <br />Growth (%)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() LM <br />Growth (%)</th>
</tr>
</thead>
<tbody>
@{
    
string _class, _v = "", _n = "", _s = "";
decimal _c,_jj, _p, _l;
StrawmanApp.Models.ChartModel _chart = Model;
foreach (StrawmanApp.Models.ChartByChannelModels item in ViewBag.ChartModel)
{
    StrawmanApp.Models.ChartByChannelModels item_m = _chart.chart_mat.Find(m=>m.market == item.market && m.brand == item.brand && m.vgroup == item.vgroup);
    StrawmanApp.Models.ChartByChannelModels item_l = _chart.chart_lm.Find(m => m.market == item.market && m.brand == item.brand && m.vgroup == item.vgroup);
    StrawmanApp.Models.ChartByChannelModels item_y = _chart.chart_ytd.Find(m => m.market == item.market && m.brand == item.brand && m.vgroup == item.vgroup);    
    <tr>
    <td style="text-align:right; width:auto;">@Html.DisplayFor(m =>item.channel_name)</td>
    <td style="width:5px; border: 1px solid rgb(0,0,0); border-left:0;"></td>
    <td style="width:11.5%;"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m=>item_m.mat_market_size_pc).ToString().Replace(',','.');float:left;height:60px;border:1px solid rgb(0,0,0);border-left:0;"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m=>item_m.mat_market_size)</span></td>
    <td> 
    @{
    _v = "";
    _p = (decimal)item_m.mat_market_share_l;
    _l = (decimal)item_m.mat_market_share_p;
    if (_p < 0) { _v = "margin-left:-" + item_m.mat_market_share_p_pc + ";"; }
    }
        <div class="pc"><div style="background-color:rgb(255,0,255);width:@Html.DisplayFor(m => item_m.mat_market_share_p_pc).ToString().Replace(',', '.');float:left; height:40px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_m.mat_market_share_p)</span></div>
    @{
    _v = "";
    if (_l < 0) { _v = "margin-left:-" + item_m.mat_market_share_l_pc + ";"; }
    }
        <div class="pc" style="clear:both;"><div style="background-color:rgb(0,0,255);width:@Html.DisplayFor(m => item_m.mat_market_share_l_pc).ToString().Replace(',', '.');float:left; height:40px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_m.mat_market_share_l)</span></div></td>
    <td>
    @{
    _v = "";
    _p = (decimal)item_y.ytd_market_share_l;
    _l = (decimal)item_y.ytd_market_share_p;
    if (_p < 0) { _v = "margin-left:-" + item_y.ytd_market_share_p_pc + ";"; }
    }
        <div class="pc"><div style="background-color:rgb(255,0,255);width:@Html.DisplayFor(m => item_y.ytd_market_share_p_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_y.ytd_market_share_p)</span></div>
    @{
    _v = "";
    if (_l < 0) { _v = "margin-left:-" + item_y.ytd_market_share_l_pc + ";"; }
    }
       <div class="pc" style="clear:both;"><div style="background-color:rgb(0,0,255);width:@Html.DisplayFor(m => item_y.ytd_market_share_l_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_y.ytd_market_share_l)</span></div></td>
    <td>
    @{
    _v = "";
    _p = (decimal)item_l.lm_market_share_l;
    _l = (decimal)item_l.lm_market_share_p;
    if (_p < 0) { _v = "margin-left:-" + item_l.lm_market_share_p_pc + ";"; }
    }
        <div class="pc"><div style="background-color:rgb(255,0,255);width:@Html.DisplayFor(m => item_l.lm_market_share_p_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_l.lm_market_share_p)</span></div>
    @{
    _v = "";
    if (_l < 0) { _v = "margin-left:-" + item_l.lm_market_share_l_pc + ";"; }
    }
        <div class="pc" style="clear:both;"><div style="background-color:rgb(0,0,255);width:@Html.DisplayFor(m => item_l.lm_market_share_l_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_l.lm_market_share_l)</span></div></td>
    <td>
        &nbsp;
    </td>
    <td>
    @if (item_m.mat_grouth_c != null && item_m.mat_grouth_jj != null)
    {
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        _c = (decimal)item_m.mat_grouth_c;
        _jj = (decimal)item_m.mat_grouth_jj;
        if (_c < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
        <div class="pc" style="@_n"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_m.mat_grouth_c_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_m.mat_grouth_c)</span></div>

        
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        if (_jj > _c) { _class = "positive"; }
        else { _class = "negative"; }
        if (_jj < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
            
      
        <div class="pc" style="clear:both;@_n"><div class="@_class" style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_m.mat_grouth_jj_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_m.mat_grouth_jj)</span></div>
    }
    </td><td style="width:10%">
    @if (item_y.ytd_grouth_c != null && item_y.ytd_grouth_jj != null)
    {
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        _c = (decimal)item_y.ytd_grouth_c;
        _jj = (decimal)item_y.ytd_grouth_jj;
        if (_c < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
        <div class="pc" style="@_n"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_y.ytd_grouth_c_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_y.ytd_grouth_c)</span></div>

        
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        if (_jj > _c) { _class = "positive"; }
        else { _class = "negative"; }
        if (_jj < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
            
      
        <div class="pc" style="clear:both;@_n"><div class="@_class" style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_y.ytd_grouth_jj_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_y.ytd_grouth_jj)</span></div>
    }
    </td><td>
    @if (item_l.lm_grouth_c != null && item_l.lm_grouth_jj != null)
    {
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        _c = (decimal)item_l.lm_grouth_c;
        _jj = (decimal)item_l.lm_grouth_jj;
        if (_c < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
            
        <div class="pc" style="@_n"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_l.lm_grouth_c_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_l.lm_grouth_c)</span></div>

       
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        if (_jj > _c) { _class = "positive"; }
        else { _class = "negative"; }
        if (_jj < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "margin-top: 6%;"; }
            
      
        <div class="pc" style="clear:both;@_n"><div class="@_class" style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_l.lm_grouth_jj_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_l.lm_grouth_jj)</span></div>
    }
    </td></tr>
    }
}
</tbody>
</table>
<div class="clear" style="clear:both;"></div>
</div>
<div class="chart_wrapper" style="width:750px; border:2px solid rgb(255,0,0);margin-left:40px;">
<div class="chart_title" style="margin: 20px; height:35px; font-family:Arial; font-size:21px; font-weight:bold; background-color:rgb(255,0,0); color:rgb(255,255,255);position:relative;padding-left:20px; text-align:center;overflow:hidden;">
@ViewBag.ChartTitle
</div>
<table style="font-size:1.6em; margin:0 auto;" class="chart">
<thead>
<tr>
<th style="width:24%;" colspan="3">@StrawmanApp.Helpers.PeriodUtil.Year.ToString() MAT Market Size<br />($ MM)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() PBP Market <br />Share (%)</th>
<th>@StrawmanApp.Helpers.PeriodUtil.Year.ToString() PBP <br />Growth (%)</th>
</tr>
</thead>
<tbody>
@foreach (StrawmanApp.Models.ChartByChannelModels item in ViewBag.ChartModel)
{
    StrawmanApp.Models.ChartByChannelModels item_p = _chart.chart_pbp.Find(m => m.market == item.market && m.brand == item.brand && m.vgroup == item.vgroup);
    <tr>
    <td style="text-align:right; width:auto;">@Html.DisplayFor(m => item_p.channel_name)</td>
    <td style="width:5px; border: 1px solid rgb(0,0,0); border-left:0;"></td>
    <td style="width:11.5%;"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m=>item_p.pbp_market_size_pc).ToString().Replace(',','.');float:left;height:60px;border:1px solid rgb(0,0,0);border-left:0;"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_p.pbp_market_size)</span></td>
    <td> 
        <div class="pc"><div style="background-color:rgb(255,0,255);width:@Html.DisplayFor(m => item_p.pbp_share_p_pc).ToString().Replace(',', '.');float:left; height:40px;"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_p.pbp_share_p)</span></div>
        <div class="pc" style="clear:both;"><div style="background-color:rgb(0,0,255);width:@Html.DisplayFor(m => item_p.pbp_share_l_pc).ToString().Replace(',', '.');float:left; height:40px;"></div><span style="margin-top: 6%; margin-left: 2%; float: left;">@Html.DisplayFor(m => item_p.pbp_share_l)</span></div></td>
    <td>
    @if (item_p.pbp_grouth_c != null && item_p.pbp_grouth_jj != null)
    {
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        _c = (decimal)item_p.pbp_grouth_c;
        _jj = (decimal)item_p.pbp_grouth_jj;

        if (_c < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "float: right !important;margin-top: 6%;"; }
         
        <div class="pc" style="@_n"><div style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_p.pbp_grouth_c_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_p.pbp_grouth_c)</span></div>
    
        _v = ""; _n = ""; _s = "margin-top: 6%; margin-left: 2%; float: left;";
        if (_jj > _c) { _class = "positive"; }
        else { _class = "negative"; }
        if (_jj < 0) { _v = "margin-left:2%;float: right !important;"; _n = "margin:0;text-align:right;"; _s = "float: right !important;margin-top: 6%;"; }
      
        <div class="pc" style="clear:both;@_n"><div class="@_class" style="background-color:rgb(0,204,255);width:@Html.DisplayFor(m => item_p.pbp_grouth_jj_pc).ToString().Replace(',', '.');float:left; height:30px;@_v"></div><span style="@_s">@Html.DisplayFor(m => item_p.pbp_grouth_jj)</span></div>
    }
    </td>
    </tr>
    
}
</tbody>
</table>
<div class="clear" style="clear:both;"></div>
</div>
<div class="clear" style="clear:both;"></div>
</div>