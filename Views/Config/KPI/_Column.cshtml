@model dynamic
@{  
    decimal? _group = 0;
    string control_style = "font-size:11px; text-align:right; width:100%;height:19px;margin:0;";
    foreach (StrawmanApp.Entities.KpiModel itemaux in (List<StrawmanApp.Entities.KpiModel>)ViewData["masterdata"])
    {
        StrawmanApp.Entities.KpiModel item = ((List<StrawmanApp.Entities.KpiModel>)Model).Find(m=>m.KPI == itemaux.KPI);
        string _style = "";
        string _colstyle = "background-color:{0};color:{1};";
        string _namestyle = "text-align:right; font-weight:normal;min-height:22px;padding-right:2px; vertical-align:middle; font-size:0.9em;";
        if (itemaux.isHead)
        {
            _style = "background-color:rgb(216,216,216); font-weight: bold; color:rgb(0,0,0);";
            _namestyle += "font-weight: bold; color:rgb(0,0,0);";
        }
        if(item == null){
            if(itemaux.GROUP != _group){
                <tr><td colspan="4" style="border:0; font-size:0.5em;">&nbsp;</td></tr>
            }
            <tr class="grid-row" style="text-align:center;@_style">     
                <td class="grid-cell" style="@_namestyle" >@Html.DisplayFor(m => itemaux.NAME)</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </tr>
        }else{            
            if (item.COL3 <= item.COL2) { 
                if(item.COL3 == item.COL2 && !item.isPC) {
                    _colstyle = String.Format(_colstyle, StrawmanApp.Helpers.StrawmanConstants.Colors.Yellow, StrawmanApp.Helpers.StrawmanConstants.Colors.Black); 
                }else{
                    _colstyle = String.Format(_colstyle, StrawmanApp.Helpers.StrawmanConstants.Colors.Red, StrawmanApp.Helpers.StrawmanConstants.Colors.White); 
                }
            
            }
            else
            {
                _colstyle = String.Format(_colstyle, StrawmanApp.Helpers.StrawmanConstants.Colors.Green, StrawmanApp.Helpers.StrawmanConstants.Colors.Black); 
            }
        
            if(itemaux.GROUP != _group){
                <tr><td colspan="4" style="border:0; font-size:0.5em;">&nbsp;</td></tr>
            }
                <tr class="grid-row" style="text-align:center;@_style">     
                    <td class="grid-cell" style="@_namestyle" >@Html.DisplayFor(m => item.NAME)@Html.HiddenFor(m=>item.KPI)</td>
                    <td class="grid-cell" style="padding:0;" data-value="@item.COL1" data-type="amount">@Html.TextBoxFor(m => item.COL1, new {@style = control_style,@data_control_type = "txt_kpi_cfg"})</td>
                    <td class="grid-cell" style="padding:0;" data-value="@item.COL2" data-type="amount">@Html.TextBoxFor(m => item.COL2, new { @style = control_style,@data_control_type = "txt_kpi_cfg" })</td>
                    <td class="grid-cell" style="padding:0;" data-value="@item.COL3" data-type="amount">@Html.TextBoxFor(m => item.COL3, new {@style = control_style,@data_control_type = "txt_kpi_cfg"})</td>
                </tr>
        }
        _group = itemaux.GROUP;
    }
}
