@model List<StrawmanApp.Models.ItemsConfigModel>
<div class="wrapper" data-controller="@ViewBag.Controller" style="width: auto;min-width: initial;">
@using GridMvc.Html;
@{
    string _action = ViewBag.FormAction;
    string _controller = ViewBag.FormController;
    @Html.Grid((List<StrawmanApp.Models.ItemsConfigModel>)Model).Named("items_channels").Columns(columns =>
          {
              columns.Add().Encoded(false).Sanitized(false).SetWidth(10).Css("checkbox-control").RenderValueAs(o => Html.CheckBoxFor(f => o.selected, new { data_type = "append", data_controller = "SetGroupCfg", data_market = o.market, data_brand = o.brand, data_channel = o.channel, data_group = o.group_id }).ToHtmlString());
              columns.Add(foo => foo.market_description).Titled("MARKET").Sortable(true);
              columns.Add(foo => foo.brand_description).Titled("BRAND").Sortable(true);
              columns.Add(foo => foo.channel_description).Titled("CHANNEL").Sortable(true);
              columns.Add(foo => foo.group_description).Titled("GROUP").Sortable(true);
              columns.Add(true).Encoded(false).Sanitized(false).RenderValueAs(o =>@<input type="hidden" name="market" value="@o.market" />);
              columns.Add(true).Encoded(false).Sanitized(false).RenderValueAs(o =>@<input type ="hidden" name ="brand" value ="@o.brand" />);
              columns.Add(true).Encoded(false).Sanitized(false).RenderValueAs(o =>@<input type ="hidden" name ="channel" value="@o.channel" />);
          }).WithPaging(15)
}
</div>